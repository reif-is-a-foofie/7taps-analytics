{
  "xapi_csv_field_mapping": {
    "created_at": "2025-01-15T23:30:00Z",
    "purpose": "Map CSV data fields to xAPI statement structure to prevent data mapping headaches",
    "csv_structure": {
      "headers": [
        "Learner",
        "Card", 
        "Card type",
        "Lesson Number",
        "Global Q#",
        "PDF Page #",
        "Response"
      ],
      "data_types": {
        "Learner": "string (learner name)",
        "Card": "string (card description with card number and type)",
        "Card type": "string (Form, Poll, Quiz, Submit media)",
        "Lesson Number": "integer (lesson identifier)",
        "Global Q#": "integer (question number across all lessons)",
        "PDF Page #": "integer (page reference)",
        "Response": "string (learner's response - varies by card type)"
      }
    },
    "xapi_statement_structure": {
      "current_format": {
        "id": "test-123",
        "verb": {"id": "completed"},
        "actor": {"account": {"name": "test-user"}},
        "object": {"id": "test-object", "objectType": "Activity"},
        "timestamp": "2025-01-05T20:30:00Z",
        "ingested_at": "2025-08-06T14:00:40.063925",
        "webhook_source": "7taps"
      },
      "target_normalized_structure": {
        "statement_id": "unique identifier",
        "actor_id": "learner identifier",
        "verb_id": "action performed",
        "activity_id": "card/lesson identifier",
        "timestamp": "when action occurred",
        "result": "response data",
        "context": "lesson/context information",
        "additional_field_1": "flexible field for extra data",
        "additional_field_2": "flexible field for extra data",
        "additional_field_3": "flexible field for extra data",
        "additional_field_4": "flexible field for extra data",
        "additional_field_5": "flexible field for extra data",
        "additional_field_6": "flexible field for extra data",
        "additional_field_7": "flexible field for extra data",
        "additional_field_8": "flexible field for extra data",
        "additional_field_9": "flexible field for extra data",
        "additional_field_10": "flexible field for extra data"
      }
    },
    "field_mapping": {
      "csv_to_xapi": {
        "Learner": {
          "xapi_field": "actor.account.name",
          "normalized_field": "actor_id",
          "additional_field": "additional_field_1",
          "transformation": "Use learner name as actor identifier",
          "example": "Audrey Todd â†’ actor_id: 'audrey_todd', additional_field_1: 'Audrey Todd'"
        },
        "Card": {
          "xapi_field": "object.definition.name.en-US",
          "normalized_field": "activity_id",
          "additional_field": "additional_field_2",
          "transformation": "Extract card number and description",
          "example": "Card 6 (Form): ðŸ§  Quick pulse check... â†’ activity_id: 'card_6_form', additional_field_2: 'Card 6 (Form): ðŸ§  Quick pulse check...'"
        },
        "Card type": {
          "xapi_field": "object.definition.interactionType",
          "normalized_field": "interaction_type",
          "additional_field": "additional_field_3",
          "transformation": "Map to xAPI interaction types",
          "mapping": {
            "Form": "choice",
            "Poll": "choice", 
            "Quiz": "choice",
            "Submit media": "other"
          }
        },
        "Lesson Number": {
          "xapi_field": "context.extensions.lesson_number",
          "normalized_field": "context_lesson",
          "additional_field": "additional_field_4",
          "transformation": "Store as context extension and additional field",
          "example": "1 â†’ context_lesson: 1, additional_field_4: 1"
        },
        "Global Q#": {
          "xapi_field": "context.extensions.global_question_number",
          "normalized_field": "context_question_number",
          "additional_field": "additional_field_5",
          "transformation": "Store as context extension and additional field",
          "example": "1 â†’ context_question_number: 1, additional_field_5: 1"
        },
        "PDF Page #": {
          "xapi_field": "context.extensions.pdf_page",
          "normalized_field": "context_pdf_page",
          "additional_field": "additional_field_6",
          "transformation": "Store as context extension and additional field",
          "example": "6 â†’ context_pdf_page: 6, additional_field_6: 6"
        },
        "Response": {
          "xapi_field": "result.response",
          "normalized_field": "result_response",
          "additional_field": "additional_field_7",
          "transformation": "Store as result data and additional field",
          "example": "Screen time, productivity... â†’ result_response: 'Screen time, productivity...', additional_field_7: 'Screen time, productivity...'"
        }
      }
    },
    "verb_mapping": {
      "by_card_type": {
        "Form": {
          "verb_id": "http://adlnet.gov/expapi/verbs/completed",
          "display_name": "completed",
          "description": "Learner completed a form submission"
        },
        "Poll": {
          "verb_id": "http://adlnet.gov/expapi/verbs/answered",
          "display_name": "answered", 
          "description": "Learner answered a poll question"
        },
        "Quiz": {
          "verb_id": "http://adlnet.gov/expapi/verbs/answered",
          "display_name": "answered",
          "description": "Learner answered a quiz question"
        },
        "Submit media": {
          "verb_id": "http://adlnet.gov/expapi/verbs/completed",
          "display_name": "completed",
          "description": "Learner submitted media content"
        }
      }
    },
    "activity_mapping": {
      "card_extraction": {
        "pattern": "Card (\\d+) \\((\\w+)\\): (.+)",
        "components": {
          "card_number": "\\1",
          "card_type": "\\2", 
          "card_description": "\\3"
        },
        "activity_id_format": "card_{card_number}_{card_type}",
        "example": "Card 6 (Form): ðŸ§  Quick pulse check... â†’ activity_id: 'card_6_form'"
      }
    },
    "data_transformation_rules": {
      "actor_processing": {
        "step_1": "Extract learner name from 'Learner' field",
        "step_2": "Create normalized actor_id (lowercase, underscore separated)",
        "step_3": "Store in actors table with actor_type: 'Agent'",
        "step_4": "Store original learner name in additional_field_1",
        "example": "Audrey Todd â†’ actor_id: 'audrey_todd', name: 'Audrey Todd', additional_field_1: 'Audrey Todd'"
      },
      "activity_processing": {
        "step_1": "Parse 'Card' field using regex pattern",
        "step_2": "Extract card number, type, and description",
        "step_3": "Create activity_id using format: card_{number}_{type}",
        "step_4": "Store in activities table with interaction_type",
        "step_5": "Store original card description in additional_field_2",
        "example": "Card 6 (Form): ðŸ§  Quick pulse check... â†’ activity_id: 'card_6_form', interaction_type: 'choice', additional_field_2: 'Card 6 (Form): ðŸ§  Quick pulse check...'"
      },
      "result_processing": {
        "step_1": "Extract 'Response' field content",
        "step_2": "Store as result_response in normalized table",
        "step_3": "Store original response in additional_field_7",
        "step_4": "For media submissions, handle file attachments",
        "step_5": "For polls/quizzes, parse multiple choice responses",
        "example": "Screen time, productivity... â†’ result_response: 'Screen time, productivity...', additional_field_7: 'Screen time, productivity...'"
      },
      "context_processing": {
        "step_1": "Extract lesson_number, global_q, pdf_page",
        "step_2": "Store as context extensions in normalized table",
        "step_3": "Store individual values in additional fields for easy querying",
        "step_4": "Create context_extensions JSON field for complex data",
        "example": "lesson: 1, question: 1, page: 6 â†’ additional_field_4: 1, additional_field_5: 1, additional_field_6: 6, context_extensions: {'lesson_number': 1, 'global_question_number': 1, 'pdf_page': 6}"
      }
    },
    "implementation_requirements": {
      "csv_parser": {
        "file": "app/csv_to_xapi_converter.py",
        "functions": [
          "parse_csv_row_to_xapi_statement()",
          "extract_actor_data()",
          "extract_activity_data()", 
          "extract_result_data()",
          "extract_context_data()"
        ]
      },
      "data_validation": {
        "required_fields": ["Learner", "Card", "Card type", "Response"],
        "optional_fields": ["Lesson Number", "Global Q#", "PDF Page #"],
        "validation_rules": [
          "Learner name must not be empty",
          "Card must match expected pattern",
          "Card type must be one of: Form, Poll, Quiz, Submit media",
          "Response must not be empty"
        ]
      },
      "error_handling": {
        "missing_fields": "Log warning and use default values",
        "invalid_card_format": "Log error and skip row",
        "invalid_card_type": "Log error and use 'other' as default",
        "empty_response": "Log warning and use empty string"
      }
    },
    "example_transformations": {
      "form_response": {
        "csv_row": {
          "Learner": "Audrey Todd",
          "Card": "Card 6 (Form): ðŸ§  Quick pulse check Rank these 5 areas...",
          "Card type": "Form",
          "Lesson Number": "1",
          "Global Q#": "1", 
          "PDF Page #": "6",
          "Response": "Screen time, productivity, stress management, sleep, real life connection"
        },
        "xapi_statement": {
          "id": "form_audrey_todd_card_6_20250115",
          "actor": {
            "account": {"name": "audrey_todd"},
            "name": "Audrey Todd"
          },
          "verb": {
            "id": "http://adlnet.gov/expapi/verbs/completed",
            "display": {"en-US": "completed"}
          },
          "object": {
            "id": "card_6_form",
            "objectType": "Activity",
            "definition": {
              "name": {"en-US": "ðŸ§  Quick pulse check Rank these 5 areas..."},
              "interactionType": "choice"
            }
          },
          "result": {
            "response": "Screen time, productivity, stress management, sleep, real life connection"
          },
          "context": {
            "extensions": {
              "lesson_number": 1,
              "global_question_number": 1,
              "pdf_page": 6
            }
          },
          "timestamp": "2025-01-15T23:30:00Z"
        }
      },
      "poll_response": {
        "csv_row": {
          "Learner": "August Rinehart",
          "Card": "Card 12 (Poll): You took a whole life assessment...",
          "Card type": "Poll",
          "Lesson Number": "1",
          "Global Q#": "2",
          "PDF Page #": "12", 
          "Response": "I'm ready for more energy"
        },
        "xapi_statement": {
          "id": "poll_august_rinehart_card_12_20250115",
          "actor": {
            "account": {"name": "august_rinehart"},
            "name": "August Rinehart"
          },
          "verb": {
            "id": "http://adlnet.gov/expapi/verbs/answered",
            "display": {"en-US": "answered"}
          },
          "object": {
            "id": "card_12_poll",
            "objectType": "Activity",
            "definition": {
              "name": {"en-US": "You took a whole life assessment..."},
              "interactionType": "choice"
            }
          },
          "result": {
            "response": "I'm ready for more energy"
          },
          "context": {
            "extensions": {
              "lesson_number": 1,
              "global_question_number": 2,
              "pdf_page": 12
            }
          },
          "timestamp": "2025-01-15T23:30:00Z"
        }
      }
    },
    "integration_points": {
      "b20_missing_data_integration": {
        "polls_data": "Already covered in CSV mapping",
        "audio_data": "Submit media responses need audio file handling",
        "file_uploads": "Media submissions require file storage and transcription"
      },
      "b21_data_migration_fix": {
        "csv_import": "New CSV data will use this mapping",
        "existing_data": "Current xAPI statements follow different format",
        "migration_strategy": "Transform CSV data using this mapping before normalization"
      }
    }
  }
}
