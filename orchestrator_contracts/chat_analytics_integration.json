{
  "module": "chat_analytics_integration",
  "agent": "ui_agent",
  "allowed_files": [
    "chat_interface.html",
    "app/api/chat.py"
  ],
  "required_endpoints": ["GET /chat", "POST /api/chat/analytics-query"],
  "status": "completed",
  "task_tracking": {
    "assigned_at": "2025-01-20T22:20:00Z",
    "estimated_duration": "2h",
    "dependencies": ["analytics_queries"],
    "subtasks": [
      {
        "id": "chat_analytics.1",
        "description": "Add pre-loaded query buttons to chat interface",
        "status": "completed",
        "agent": "ui_agent",
        "files": ["chat_interface.html"]
      },
      {
        "id": "chat_analytics.2",
        "description": "Implement query suggestion system",
        "status": "completed",
        "agent": "ui_agent",
        "files": ["chat_interface.html"]
      },
      {
        "id": "chat_analytics.3",
        "description": "Add chart rendering for query results in chat",
        "status": "completed",
        "agent": "ui_agent",
        "files": ["chat_interface.html"]
      },
      {
        "id": "chat_analytics.4",
        "description": "Test chat analytics integration",
        "status": "pending",
        "agent": "testing_agent",
        "files": []
      }
    ],
    "completion_criteria": [
      "Chat interface displays all 7 analytics queries as suggestions",
      "Clicking query suggestions executes and displays results",
      "Charts render properly in chat responses",
      "Chat integrates with analytics API endpoints",
      "Query suggestions are contextually relevant"
    ],
    "real_world_testing": {
      "required": true,
      "notes": "Test chat analytics at http://localhost:8000/chat",
      "docker_compose_required": false,
      "test_environment": "localhost:8000"
    },
    "blocking_issues": [],
    "progress_percentage": 100
  },
  "app_contract": {
    "name": "ChatAnalyticsIntegration",
    "description": "Integrate analytics queries into chat interface",
    "actions": [
      {
        "name": "load_query_suggestions",
        "input": {},
        "output": {
          "suggestions": "list",
          "categories": "list"
        }
      },
      {
        "name": "execute_analytics_query",
        "input": {
          "query_id": "string"
        },
        "output": {
          "response": "string",
          "chart_data": "object",
          "explanation": "string"
        }
      }
    ]
  },
  "chat_suggestions": [
    {
      "category": "Completion Analysis",
      "queries": [
        {
          "id": "completion_rates",
          "text": "Show me completion rates for each lesson",
          "icon": "üìä"
        },
        {
          "id": "highest_lowest", 
          "text": "Which lessons have highest/lowest completion?",
          "icon": "üèÜ"
        },
        {
          "id": "average_completion",
          "text": "What's the average completion rate?",
          "icon": "üìà"
        }
      ]
    },
    {
      "category": "Student Progress",
      "queries": [
        {
          "id": "incomplete_students",
          "text": "Who hasn't finished the course yet?",
          "icon": "üë•"
        },
        {
          "id": "completion_speed",
          "text": "How many completed within 30 days?",
          "icon": "‚è±Ô∏è"
        }
      ]
    },
    {
      "category": "Engagement & Trends",
      "queries": [
        {
          "id": "engagement_time",
          "text": "Show student engagement over time",
          "icon": "üìÖ"
        },
        {
          "id": "lesson_comparison",
          "text": "Compare Lesson 1 vs Lesson 5",
          "icon": "‚öñÔ∏è"
        }
      ]
    }
  ],
  "agent_handoff": {
    "from_agent": null,
    "to_agent": "ui_agent",
    "handoff_notes": "Integrate analytics queries into chat interface with pre-loaded suggestions",
    "required_approval": false
  }
}
