{
  "module": "dashboard_fix",
  "agent": "backend_agent",
  "allowed_files": [
    "app/main.py",
    "templates/dashboard.html",
    "templates/error.html"
  ],
  "required_endpoints": ["GET /"],
  "status": "draft",
  "task_tracking": {
    "assigned_at": "2025-01-20T21:35:00Z",
    "estimated_duration": "1h",
    "dependencies": [],
    "subtasks": [
      {
        "id": "dashboard.1",
        "description": "Fix database connection error handling in dashboard endpoint",
        "status": "pending",
        "agent": "backend_agent",
        "files": ["app/main.py"]
      },
      {
        "id": "dashboard.2",
        "description": "Create fallback dashboard that works without database",
        "status": "pending",
        "agent": "backend_agent",
        "files": ["app/main.py", "templates/dashboard.html"]
      },
      {
        "id": "dashboard.3",
        "description": "Test dashboard loads successfully at /",
        "status": "pending",
        "agent": "testing_agent",
        "files": []
      }
    ],
    "completion_criteria": [
      "Dashboard at / loads without database errors",
      "Fallback mode works when DATABASE_URL is not set",
      "Error handling shows proper error page",
      "Dashboard displays analytics data when database is available"
    ],
    "real_world_testing": {
      "required": true,
      "notes": "Test dashboard at http://localhost:8000/",
      "docker_compose_required": false,
      "test_environment": "localhost:8000"
    },
    "blocking_issues": [
      "Dashboard failing due to database connection",
      "No fallback when DATABASE_URL is missing"
    ],
    "progress_percentage": 0
  },
  "agent_handoff": {
    "from_agent": null,
    "to_agent": "backend_agent",
    "handoff_notes": "Fix dashboard database connection and ensure / endpoint works reliably",
    "required_approval": false
  }
}
