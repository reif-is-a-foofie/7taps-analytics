version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: 7taps_analytics
      POSTGRES_USER: analytics_user
      POSTGRES_PASSWORD: analytics_pass
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U analytics_user -d 7taps_analytics"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for Streams
  redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Direct Database Access (No MCP needed)
  # PostgreSQL and Redis are accessed directly via psycopg2 and redis-py

  # SQLPad for DB Terminal
  sqlpad:
    image: sqlpad/sqlpad:latest
    ports:
      - "3000:3000"
    environment:
      SQLPAD_ADMIN: admin@7taps.com
      SQLPAD_ADMIN_PASSWORD: admin123
      SQLPAD_APP_LOG_LEVEL: info
      SQLPAD_WEB_LOG_LEVEL: info

    volumes:
      - sqlpad_data:/var/lib/sqlpad
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Learning Locker (xAPI LRS)
  learninglocker:
    image: learninglocker/learninglocker:latest
    ports:
      - "8080:80"
    environment:
      # Database configuration
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: learninglocker
      DB_USERNAME: analytics_user
      DB_PASSWORD: analytics_pass
      
      # Redis configuration
      REDIS_HOST: redis
      REDIS_PORT: 6379
      
      # App configuration
      APP_URL: http://localhost:8080
      APP_DEBUG: "false"
      APP_ENV: production
      
      # Queue configuration
      QUEUE_CONNECTION: redis
      QUEUE_DRIVER: redis
      
      # Cache configuration
      CACHE_DRIVER: redis
      SESSION_DRIVER: redis
      
      # Mail configuration (optional)
      MAIL_MAILER: log
      
      # Learning Locker specific
      LL_APP_NAME: "7taps Analytics LRS"
      LL_APP_URL: http://localhost:8080
      LL_APP_ENV: production
      LL_APP_DEBUG: "false"
      LL_APP_KEY: base64:your-app-key-here
      LL_APP_CIPHER: AES-256-CBC
      
      # xAPI configuration
      LL_XAPI_STATEMENTS_ENDPOINT: http://localhost:8080/data/xAPI/statements
      LL_XAPI_ACTIVITIES_ENDPOINT: http://localhost:8080/data/xAPI/activities
      LL_XAPI_AGENTS_ENDPOINT: http://localhost:8080/data/xAPI/agents
      
      # Auth configuration
      LL_AUTH_ADMIN_EMAIL: admin@7taps.com
      LL_AUTH_ADMIN_PASSWORD: admin123
      LL_AUTH_ADMIN_NAME: "7taps Admin"
      
      # Database setup
      LL_DB_SETUP: "true"
      LL_DB_SEED: "true"
      
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - learninglocker_data:/var/www/html/storage
      - learninglocker_logs:/var/www/html/storage/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # FastAPI Application
  app:
    build: .
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://analytics_user:analytics_pass@postgres:5432/7taps_analytics
      REDIS_URL: redis://redis:6379
      PYTHONUNBUFFERED: 1
      LOG_LEVEL: info
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      learninglocker:
        condition: service_healthy
    volumes:
      - ./app:/app
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

volumes:
  postgres_data:
  redis_data:
  sqlpad_data:
  learninglocker_data:
  learninglocker_logs: 